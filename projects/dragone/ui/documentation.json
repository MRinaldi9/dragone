{
  "pipes": [],
  "interfaces": [],
  "injectables": [],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [],
  "components": [],
  "modules": [],
  "miscellaneous": {
    "variables": [
      {
        "name": "AccordionMultiple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/accordion/src/accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    type: 'multiple',\n  },\n  render: args => {\n    return {\n      props: args,\n      template: `\n      <drgn-accordion style=\"max-width: 24rem;\" ${argsToTemplate(args, { exclude: ['heading', 'darkMode', 'accordionVariant'] })}>\n        <drgn-accordion-item ${argsToTemplate({ ...args, heading: args.heading }, { exclude: ['darkMode', 'collapse', 'type', 'orientation'] })}>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n        </drgn-accordion-item>\n        <drgn-accordion-item heading=\"Dragone#2\" ${argsToTemplate({ ...args }, { exclude: ['darkMode', 'collapse', 'type', 'orientation', 'heading'] })}>\n          <p>Sed et laborum.</p>\n        </drgn-accordion-item>\n      </drgn-accordion>\n      `,\n    };\n  },\n}"
      },
      {
        "name": "AccordionSingle",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/accordion/src/accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: args => {\n    return {\n      props: args,\n      template: `\n      <drgn-accordion style=\"max-width: 24rem;\" ${argsToTemplate(args, { exclude: ['heading', 'darkMode', 'accordionVariant'] })}>\n        <drgn-accordion-item ${argsToTemplate({ ...args, heading: args.heading }, { exclude: ['darkMode', 'collapse', 'type', 'orientation'] })}>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n        </drgn-accordion-item>\n      </drgn-accordion>\n      `,\n    };\n  },\n}"
      },
      {
        "name": "BreadcrumbSingle",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/breadcrumb/src/breadcrumb.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  render: args => ({\r\n    props: args,\r\n    template: `\r\n      <drgn-breadcrumb ${argsToTemplate(args, { exclude: ['darkMode'] })} />\r\n    `,\r\n  }),\r\n}"
      },
      {
        "name": "Danger",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/button/src/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    variant: 'danger',\r\n  },\r\n}"
      },
      {
        "name": "IconOnly",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/button/src/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    label: '',\r\n    showLeadingIcon: true,\r\n    icon: true,\r\n  },\r\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/accordion/src/accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<Accordion>",
        "defaultValue": "{\n  title: 'Dragone/UI/Accordion',\n  component: Accordion,\n  tags: ['autodocs'],\n  args: {\n    collapse: true,\n    type: 'single',\n    disabled: false,\n    orientation: 'vertical',\n    heading: 'Dragone',\n    accordionChange: fn(),\n    accordionVariant: 'dark',\n  },\n  argTypes: {\n    collapse: {\n      type: 'boolean',\n      control: { type: 'boolean' },\n      description: 'Allows all accordion items to be collapsed',\n    },\n    heading: { control: 'text' },\n    type: {\n      type: 'string',\n      control: 'select',\n      options: ['single', 'multiple'],\n      table: { defaultValue: { summary: 'single' } },\n    },\n    accordionVariant: {\n      type: 'string',\n      control: 'select',\n      options: ['dark', 'light'],\n      table: { defaultValue: { summary: 'dark' } },\n    },\n    disabled: {\n      description: 'Disables the accordion if set to true',\n      type: 'boolean',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    accordionChange: { type: 'function', control: false },\n  },\n  decorators: [moduleMetadata({ imports: [AccordionItem] })],\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/breadcrumb/src/breadcrumb.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<Breadcrumb>",
        "defaultValue": "{\r\n  title: 'Dragone/UI/Breadcrumb',\r\n  component: Breadcrumb,\r\n  tags: ['autodocs'],\r\n  decorators: [moduleMetadata({ imports: [BreadcrumbItem], providers: [] })],\r\n  args: {\r\n    breadcrumbs: [\r\n      // {\r\n      //   label: 'Inventore corporis dolore at illo magnam rerum nesciunt.',\r\n      //   routerLink: '/',\r\n      //   icon: faSolidHouse,\r\n      // },\r\n      // {\r\n      //   label: 'Delectus quis laudantium praesentium veritatis voluptates rerum dicta.',\r\n      //   routerLink: '/category',\r\n      // },\r\n      // {\r\n      //   label: 'Minus nam aut ut autem ducimus velit aliquid.',\r\n      //   routerLink: '/category/subcategory',\r\n      // },\r\n      // {\r\n      //   label: 'Minus nam aut ut autem ducimus velit aliquid.',\r\n      //   routerLink: '/category/subcategory',\r\n      // },\r\n      // {\r\n      //   label: 'Minus nam aut ut autem ducimus velit aliquid.',\r\n      //   routerLink: '/category/subcategory',\r\n      // },\r\n      // {\r\n      //   label: 'Nam velit sunt voluptatem ipsum ea inventore tenetur iusto.',\r\n      //   href: '/category/subcategory/current-page',\r\n      // },\r\n    ],\r\n  },\r\n  argTypes: {\r\n    breadcrumbs: { control: { type: 'object' } },\r\n  },\r\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/button/src/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ButtonStory>",
        "defaultValue": "{\r\n  title: 'Dragone/UI/Button',\r\n  component: Button,\r\n  tags: ['autodocs'],\r\n  args: {\r\n    focusVisible: fn(),\r\n    label: 'Dragone',\r\n    disabled: false,\r\n    icon: false,\r\n    showLeadingIcon: false,\r\n    showTrailingIcon: false,\r\n    size: 'large',\r\n    variant: 'primary',\r\n  },\r\n  argTypes: {\r\n    focusVisible: { type: 'function', control: false },\r\n    label: { control: 'text' },\r\n    showLeadingIcon: { control: 'boolean' },\r\n    showTrailingIcon: { control: 'boolean' },\r\n    size: {\r\n      description: 'The size of the button',\r\n      type: 'string',\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n      table: {\r\n        defaultValue: { summary: 'large' },\r\n      },\r\n    },\r\n    variant: {\r\n      description: 'The variant of the button',\r\n      type: 'string',\r\n      options: ['primary', 'secondary', 'tertiary', 'ghost', 'danger'],\r\n      control: { type: 'select' },\r\n      table: {\r\n        defaultValue: { summary: 'primary' },\r\n      },\r\n    },\r\n    disabled: {\r\n      description: 'Whether the button is disabled',\r\n      type: 'boolean',\r\n      control: { type: 'boolean' },\r\n      table: {\r\n        defaultValue: { summary: 'false' },\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({ providers: [provideIcons({ faSolidArrowRight })], imports: [NgIcon] }),\r\n  ],\r\n  render: args => {\r\n    return {\r\n      props: args,\r\n      template: `\r\n      <button drgn-button ${argsToTemplate(args, { exclude: ['darkMode', 'label', 'showLeadingIcon', 'showTrailingIcon'] })}>\r\n        ${args.showLeadingIcon ? '<ng-icon slot=\"leading\" name=\"fa-solid-arrow-right\"></ng-icon>' : ''}\r\n        ${args.label}\r\n        ${args.showTrailingIcon ? '<ng-icon slot=\"trailing\" name=\"fa-solid-arrow-right\"></ng-icon>' : ''}\r\n      </button>\r\n      `,\r\n    };\r\n  },\r\n}"
      },
      {
        "name": "preview",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/.storybook/preview.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Preview",
        "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  args: {\n    darkMode: false,\n  },\n  argTypes: {\n    darkMode: {\n      description: 'Global control for enabling dark mode',\n      control: 'boolean',\n      table: { defaultValue: { summary: 'false' } },\n    },\n  },\n  decorators: [\n    applicationConfig({ providers: [provideRouter([])] }),\n    (storyFn, { args }) => {\n      const story = storyFn();\n\n      // 2. Estraiamo il valore di 'darkMode' dal contesto\n      const darkMode = args['darkMode'] as boolean;\n\n      // 3. Determiniamo i colori e la classe del tema\n      const backgroundColor = darkMode ? '#002460' : '#FFFFFF';\n      const themeClass = darkMode ? 'drgn-dark' : '';\n\n      // 4. Modifichiamo il template della storia per avvolgerlo nel nostro div dinamico\n      story.template = `\n        <div\n          class=\"${themeClass}\"\n          style=\"\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background-color: ${backgroundColor};\n            padding: 2rem;\n            transition: background-color 0.3s;\n          \"\n        >\n          ${story.template}\n        </div>\n      `;\n\n      // 5. Restituiamo l'oggetto storia modificato\n      return story;\n    },\n  ],\n}"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/button/src/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    variant: 'primary',\r\n  },\r\n}"
      },
      {
        "name": "Secondary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/button/src/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    variant: 'secondary',\r\n  },\r\n}"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/button/src/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  play: async ({ canvas, userEvent, canvasElement, args, step }) => {\r\n    const button = canvas.getByRole<HTMLButtonElement>('button');\r\n    await step('Click on button', async () => {\r\n      await userEvent.click(button);\r\n      await expect(args.focusVisible).not.toHaveBeenCalled();\r\n    });\r\n\r\n    await userEvent.click(canvasElement);\r\n\r\n    await step('Focus visible on button', async () => {\r\n      await userEvent.tab();\r\n      await expect(button).toHaveFocus();\r\n      await expect(args.focusVisible).toHaveBeenCalled();\r\n    });\r\n  },\r\n}"
      },
      {
        "name": "Tertiary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/button/src/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    variant: 'tertiary',\r\n  },\r\n}"
      },
      {
        "name": "WithTrailingIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dragone/ui/button/src/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    showTrailingIcon: true,\r\n  },\r\n}"
      }
    ],
    "functions": [],
    "typealiases": [
      {
        "name": "ButtonStory",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "projects/dragone/ui/button/src/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 193
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<Accordion>",
        "file": "projects/dragone/ui/accordion/src/accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<Breadcrumb>",
        "file": "projects/dragone/ui/breadcrumb/src/breadcrumb.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<ButtonStory>",
        "file": "projects/dragone/ui/button/src/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      }
    ],
    "enumerations": [],
    "groupedVariables": {
      "projects/dragone/ui/accordion/src/accordion.stories.ts": [
        {
          "name": "AccordionMultiple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/accordion/src/accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    type: 'multiple',\n  },\n  render: args => {\n    return {\n      props: args,\n      template: `\n      <drgn-accordion style=\"max-width: 24rem;\" ${argsToTemplate(args, { exclude: ['heading', 'darkMode', 'accordionVariant'] })}>\n        <drgn-accordion-item ${argsToTemplate({ ...args, heading: args.heading }, { exclude: ['darkMode', 'collapse', 'type', 'orientation'] })}>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n        </drgn-accordion-item>\n        <drgn-accordion-item heading=\"Dragone#2\" ${argsToTemplate({ ...args }, { exclude: ['darkMode', 'collapse', 'type', 'orientation', 'heading'] })}>\n          <p>Sed et laborum.</p>\n        </drgn-accordion-item>\n      </drgn-accordion>\n      `,\n    };\n  },\n}"
        },
        {
          "name": "AccordionSingle",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/accordion/src/accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: args => {\n    return {\n      props: args,\n      template: `\n      <drgn-accordion style=\"max-width: 24rem;\" ${argsToTemplate(args, { exclude: ['heading', 'darkMode', 'accordionVariant'] })}>\n        <drgn-accordion-item ${argsToTemplate({ ...args, heading: args.heading }, { exclude: ['darkMode', 'collapse', 'type', 'orientation'] })}>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n        </drgn-accordion-item>\n      </drgn-accordion>\n      `,\n    };\n  },\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/accordion/src/accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<Accordion>",
          "defaultValue": "{\n  title: 'Dragone/UI/Accordion',\n  component: Accordion,\n  tags: ['autodocs'],\n  args: {\n    collapse: true,\n    type: 'single',\n    disabled: false,\n    orientation: 'vertical',\n    heading: 'Dragone',\n    accordionChange: fn(),\n    accordionVariant: 'dark',\n  },\n  argTypes: {\n    collapse: {\n      type: 'boolean',\n      control: { type: 'boolean' },\n      description: 'Allows all accordion items to be collapsed',\n    },\n    heading: { control: 'text' },\n    type: {\n      type: 'string',\n      control: 'select',\n      options: ['single', 'multiple'],\n      table: { defaultValue: { summary: 'single' } },\n    },\n    accordionVariant: {\n      type: 'string',\n      control: 'select',\n      options: ['dark', 'light'],\n      table: { defaultValue: { summary: 'dark' } },\n    },\n    disabled: {\n      description: 'Disables the accordion if set to true',\n      type: 'boolean',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    accordionChange: { type: 'function', control: false },\n  },\n  decorators: [moduleMetadata({ imports: [AccordionItem] })],\n}"
        }
      ],
      "projects/dragone/ui/breadcrumb/src/breadcrumb.stories.ts": [
        {
          "name": "BreadcrumbSingle",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/breadcrumb/src/breadcrumb.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  render: args => ({\r\n    props: args,\r\n    template: `\r\n      <drgn-breadcrumb ${argsToTemplate(args, { exclude: ['darkMode'] })} />\r\n    `,\r\n  }),\r\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/breadcrumb/src/breadcrumb.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<Breadcrumb>",
          "defaultValue": "{\r\n  title: 'Dragone/UI/Breadcrumb',\r\n  component: Breadcrumb,\r\n  tags: ['autodocs'],\r\n  decorators: [moduleMetadata({ imports: [BreadcrumbItem], providers: [] })],\r\n  args: {\r\n    breadcrumbs: [\r\n      // {\r\n      //   label: 'Inventore corporis dolore at illo magnam rerum nesciunt.',\r\n      //   routerLink: '/',\r\n      //   icon: faSolidHouse,\r\n      // },\r\n      // {\r\n      //   label: 'Delectus quis laudantium praesentium veritatis voluptates rerum dicta.',\r\n      //   routerLink: '/category',\r\n      // },\r\n      // {\r\n      //   label: 'Minus nam aut ut autem ducimus velit aliquid.',\r\n      //   routerLink: '/category/subcategory',\r\n      // },\r\n      // {\r\n      //   label: 'Minus nam aut ut autem ducimus velit aliquid.',\r\n      //   routerLink: '/category/subcategory',\r\n      // },\r\n      // {\r\n      //   label: 'Minus nam aut ut autem ducimus velit aliquid.',\r\n      //   routerLink: '/category/subcategory',\r\n      // },\r\n      // {\r\n      //   label: 'Nam velit sunt voluptatem ipsum ea inventore tenetur iusto.',\r\n      //   href: '/category/subcategory/current-page',\r\n      // },\r\n    ],\r\n  },\r\n  argTypes: {\r\n    breadcrumbs: { control: { type: 'object' } },\r\n  },\r\n}"
        }
      ],
      "projects/dragone/ui/button/src/button.stories.ts": [
        {
          "name": "Danger",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/button/src/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    variant: 'danger',\r\n  },\r\n}"
        },
        {
          "name": "IconOnly",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/button/src/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    label: '',\r\n    showLeadingIcon: true,\r\n    icon: true,\r\n  },\r\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/button/src/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ButtonStory>",
          "defaultValue": "{\r\n  title: 'Dragone/UI/Button',\r\n  component: Button,\r\n  tags: ['autodocs'],\r\n  args: {\r\n    focusVisible: fn(),\r\n    label: 'Dragone',\r\n    disabled: false,\r\n    icon: false,\r\n    showLeadingIcon: false,\r\n    showTrailingIcon: false,\r\n    size: 'large',\r\n    variant: 'primary',\r\n  },\r\n  argTypes: {\r\n    focusVisible: { type: 'function', control: false },\r\n    label: { control: 'text' },\r\n    showLeadingIcon: { control: 'boolean' },\r\n    showTrailingIcon: { control: 'boolean' },\r\n    size: {\r\n      description: 'The size of the button',\r\n      type: 'string',\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n      table: {\r\n        defaultValue: { summary: 'large' },\r\n      },\r\n    },\r\n    variant: {\r\n      description: 'The variant of the button',\r\n      type: 'string',\r\n      options: ['primary', 'secondary', 'tertiary', 'ghost', 'danger'],\r\n      control: { type: 'select' },\r\n      table: {\r\n        defaultValue: { summary: 'primary' },\r\n      },\r\n    },\r\n    disabled: {\r\n      description: 'Whether the button is disabled',\r\n      type: 'boolean',\r\n      control: { type: 'boolean' },\r\n      table: {\r\n        defaultValue: { summary: 'false' },\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({ providers: [provideIcons({ faSolidArrowRight })], imports: [NgIcon] }),\r\n  ],\r\n  render: args => {\r\n    return {\r\n      props: args,\r\n      template: `\r\n      <button drgn-button ${argsToTemplate(args, { exclude: ['darkMode', 'label', 'showLeadingIcon', 'showTrailingIcon'] })}>\r\n        ${args.showLeadingIcon ? '<ng-icon slot=\"leading\" name=\"fa-solid-arrow-right\"></ng-icon>' : ''}\r\n        ${args.label}\r\n        ${args.showTrailingIcon ? '<ng-icon slot=\"trailing\" name=\"fa-solid-arrow-right\"></ng-icon>' : ''}\r\n      </button>\r\n      `,\r\n    };\r\n  },\r\n}"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/button/src/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    variant: 'primary',\r\n  },\r\n}"
        },
        {
          "name": "Secondary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/button/src/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    variant: 'secondary',\r\n  },\r\n}"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/button/src/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  play: async ({ canvas, userEvent, canvasElement, args, step }) => {\r\n    const button = canvas.getByRole<HTMLButtonElement>('button');\r\n    await step('Click on button', async () => {\r\n      await userEvent.click(button);\r\n      await expect(args.focusVisible).not.toHaveBeenCalled();\r\n    });\r\n\r\n    await userEvent.click(canvasElement);\r\n\r\n    await step('Focus visible on button', async () => {\r\n      await userEvent.tab();\r\n      await expect(button).toHaveFocus();\r\n      await expect(args.focusVisible).toHaveBeenCalled();\r\n    });\r\n  },\r\n}"
        },
        {
          "name": "Tertiary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/button/src/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    variant: 'tertiary',\r\n  },\r\n}"
        },
        {
          "name": "WithTrailingIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/button/src/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    showTrailingIcon: true,\r\n  },\r\n}"
        }
      ],
      "projects/dragone/ui/.storybook/preview.ts": [
        {
          "name": "preview",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dragone/ui/.storybook/preview.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Preview",
          "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  args: {\n    darkMode: false,\n  },\n  argTypes: {\n    darkMode: {\n      description: 'Global control for enabling dark mode',\n      control: 'boolean',\n      table: { defaultValue: { summary: 'false' } },\n    },\n  },\n  decorators: [\n    applicationConfig({ providers: [provideRouter([])] }),\n    (storyFn, { args }) => {\n      const story = storyFn();\n\n      // 2. Estraiamo il valore di 'darkMode' dal contesto\n      const darkMode = args['darkMode'] as boolean;\n\n      // 3. Determiniamo i colori e la classe del tema\n      const backgroundColor = darkMode ? '#002460' : '#FFFFFF';\n      const themeClass = darkMode ? 'drgn-dark' : '';\n\n      // 4. Modifichiamo il template della storia per avvolgerlo nel nostro div dinamico\n      story.template = `\n        <div\n          class=\"${themeClass}\"\n          style=\"\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background-color: ${backgroundColor};\n            padding: 2rem;\n            transition: background-color 0.3s;\n          \"\n        >\n          ${story.template}\n        </div>\n      `;\n\n      // 5. Restituiamo l'oggetto storia modificato\n      return story;\n    },\n  ],\n}"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {},
    "groupedTypeAliases": {
      "projects/dragone/ui/button/src/button.stories.ts": [
        {
          "name": "ButtonStory",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "projects/dragone/ui/button/src/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 193
        },
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<ButtonStory>",
          "file": "projects/dragone/ui/button/src/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dragone/ui/accordion/src/accordion.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<Accordion>",
          "file": "projects/dragone/ui/accordion/src/accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dragone/ui/breadcrumb/src/breadcrumb.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<Breadcrumb>",
          "file": "projects/dragone/ui/breadcrumb/src/breadcrumb.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ]
    }
  },
  "routes": {
    "name": "<root>",
    "kind": "module",
    "children": []
  },
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "projects/dragone/ui/.storybook/preview.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "preview",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/accordion/src/accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AccordionMultiple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/accordion/src/accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AccordionSingle",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/accordion/src/accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/accordion/src/accordion.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/breadcrumb/src/breadcrumb.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "BreadcrumbSingle",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/breadcrumb/src/breadcrumb.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/breadcrumb/src/breadcrumb.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/button/src/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Danger",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/button/src/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "IconOnly",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/button/src/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/button/src/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/button/src/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Secondary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/button/src/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/button/src/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Tertiary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/button/src/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithTrailingIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/button/src/button.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "ButtonStory",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dragone/ui/button/src/button.stories.ts",
        "type": "type alias",
        "linktype": "miscellaneous",
        "linksubtype": "typealias",
        "name": "Story",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
