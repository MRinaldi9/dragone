{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "ButtonPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dragone/ui/button/src/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'primary',\n    size: 'large',\n  },\n  play: async ({ canvas, userEvent }) => {\n    const button = canvas.getByText<HTMLButtonElement>('Dragone');\n\n    await userEvent.click(button);\n    button.onclick = async (e) => {\n      await expect(e).toBeInstanceOf(MouseEvent);\n    };\n  },\n}"
            },
            {
                "name": "ButtonPrimaryOnlyIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dragone/ui/button/src/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...ButtonPrimary.args,\n    icon: true,\n  },\n  decorators: [\n    moduleMetadata({ providers: [provideIcons({ faSolidArrowRight })], imports: [NgIcon] }),\n  ],\n  render: args => ({\n    props: args,\n    template: `<button drgn-button ${argsToTemplate(args)}><ng-icon name=\"fa-solid-arrow-right\"></ng-icon></button>`,\n  }),\n}"
            },
            {
                "name": "ButtonPrimaryWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dragone/ui/button/src/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...ButtonPrimary.args,\n  },\n  decorators: [\n    moduleMetadata({ providers: [provideIcons({ faSolidArrowRight })], imports: [NgIcon] }),\n  ],\n  render: args => ({\n    props: args,\n    template: `<button drgn-button ${argsToTemplate(args)}>Dragone <ng-icon slot=\"trailing\" name=\"fa-solid-arrow-right\"></ng-icon></button>`,\n  }),\n}"
            },
            {
                "name": "ButtonSecondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dragone/ui/button/src/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'secondary',\n    size: 'large',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dragone/ui/button/src/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<>",
                "defaultValue": "{\n  title: 'Dragone/UI/Button',\n  component: Button,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      description: 'The size of the button',\n      type: 'string',\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n      table: {\n        defaultValue: { summary: 'large' },\n      },\n    },\n    variant: {\n      description: 'The variant of the button',\n      type: 'string',\n      options: ['primary', 'secondary', 'tertiary', 'ghost', 'danger'],\n      control: { type: 'select' },\n      table: {\n        defaultValue: { summary: 'primary' },\n      },\n    },\n    disabled: {\n      description: 'Whether the button is disabled',\n      type: 'boolean',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n  },\n  render: args => {\n    return {\n      props: args,\n      template: `<button drgn-button ${argsToTemplate(args)}>Dragone</button>`,\n    };\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dragone/ui/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  decorators: [componentWrapperDecorator(story => `<div style=\"display: flex; justify-content: center;\">${story}</div>`)],\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<>",
                "file": "projects/dragone/ui/button/src/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/dragone/ui/button/src/button.stories.ts": [
                {
                    "name": "ButtonPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dragone/ui/button/src/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'primary',\n    size: 'large',\n  },\n  play: async ({ canvas, userEvent }) => {\n    const button = canvas.getByText<HTMLButtonElement>('Dragone');\n\n    await userEvent.click(button);\n    button.onclick = async (e) => {\n      await expect(e).toBeInstanceOf(MouseEvent);\n    };\n  },\n}"
                },
                {
                    "name": "ButtonPrimaryOnlyIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dragone/ui/button/src/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...ButtonPrimary.args,\n    icon: true,\n  },\n  decorators: [\n    moduleMetadata({ providers: [provideIcons({ faSolidArrowRight })], imports: [NgIcon] }),\n  ],\n  render: args => ({\n    props: args,\n    template: `<button drgn-button ${argsToTemplate(args)}><ng-icon name=\"fa-solid-arrow-right\"></ng-icon></button>`,\n  }),\n}"
                },
                {
                    "name": "ButtonPrimaryWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dragone/ui/button/src/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...ButtonPrimary.args,\n  },\n  decorators: [\n    moduleMetadata({ providers: [provideIcons({ faSolidArrowRight })], imports: [NgIcon] }),\n  ],\n  render: args => ({\n    props: args,\n    template: `<button drgn-button ${argsToTemplate(args)}>Dragone <ng-icon slot=\"trailing\" name=\"fa-solid-arrow-right\"></ng-icon></button>`,\n  }),\n}"
                },
                {
                    "name": "ButtonSecondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dragone/ui/button/src/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'secondary',\n    size: 'large',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dragone/ui/button/src/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<>",
                    "defaultValue": "{\n  title: 'Dragone/UI/Button',\n  component: Button,\n  tags: ['autodocs'],\n  argTypes: {\n    size: {\n      description: 'The size of the button',\n      type: 'string',\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n      table: {\n        defaultValue: { summary: 'large' },\n      },\n    },\n    variant: {\n      description: 'The variant of the button',\n      type: 'string',\n      options: ['primary', 'secondary', 'tertiary', 'ghost', 'danger'],\n      control: { type: 'select' },\n      table: {\n        defaultValue: { summary: 'primary' },\n      },\n    },\n    disabled: {\n      description: 'Whether the button is disabled',\n      type: 'boolean',\n      control: { type: 'boolean' },\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n  },\n  render: args => {\n    return {\n      props: args,\n      template: `<button drgn-button ${argsToTemplate(args)}>Dragone</button>`,\n    };\n  },\n}"
                }
            ],
            "projects/dragone/ui/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dragone/ui/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  decorators: [componentWrapperDecorator(story => `<div style=\"display: flex; justify-content: center;\">${story}</div>`)],\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/dragone/ui/button/src/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<>",
                    "file": "projects/dragone/ui/button/src/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "children": []
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/dragone/ui/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dragone/ui/button/src/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dragone/ui/button/src/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonPrimaryOnlyIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dragone/ui/button/src/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonPrimaryWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dragone/ui/button/src/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonSecondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dragone/ui/button/src/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dragone/ui/button/src/button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}